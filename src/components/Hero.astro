---
import HexagonPattern from './HexagonPattern.astro';
import { getAssetPath } from '../utils/getAssetPath';

const frameworks = [
  { name: 'React', color: 'text-cyan-500' },
  { name: 'Svelte', color: 'text-orange-500' },
  { name: 'Vue', color: 'text-emerald-500' },
  { name: 'Angular', color: 'text-red-500' }
];
---

<section class="relative isolate overflow-hidden min-h-screen">
  <HexagonPattern />
  <div class="absolute inset-0 -z-10">
    <div class="absolute inset-0 bg-gradient-to-br from-white/80 via-transparent to-white/80"></div>
  </div>

  <div class="mx-auto max-w-7xl px-6 py-24 sm:py-32 lg:px-8 relative z-10">
    <div class="mx-auto max-w-2xl text-center">
      <div class="mx-auto w-32 h-32 sm:w-40 sm:h-40 mb-12 animate-logo">
        <img src={getAssetPath('/zenthyr-logo.svg')} alt="Zenthyr Logo" class="drop-shadow-lg w-full h-full" />
      </div>
      
      <h1 class="text-4xl font-bold tracking-tight sm:text-6xl bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-indigo-400">
        Build Desktop Apps with Clojure and{' '}
        <span class="animate-framework-change inline-block">
          {frameworks.map((fw, index) => (
            <span class={`framework-name ${fw.color} absolute transition-all duration-500`} style={`opacity: 0; transform: translateY(100%); animation: showFramework 8s infinite ${index * 2}s;`}>
              {fw.name}
            </span>
          ))}
        </span>
      </h1>

<style>
  @keyframes float {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    25% { transform: translateY(-10px) rotate(2deg); }
    75% { transform: translateY(6px) rotate(-2deg); }
  }
  
  .animate-logo {
    animation: float 6s ease-in-out infinite;
    filter: drop-shadow(0 0 10px rgba(79, 70, 229, 0.2));
  }

  .animate-framework-change {
    position: relative;
    min-width: 200px;
    height: 1.2em;
    overflow: visible;
    margin-bottom: -20px;
  }

  .framework-name {
    position: absolute;
    left: 0;
    top: 0;
    white-space: nowrap;
    overflow: visible;
  }

  @keyframes showFramework {
    0%, 100% { opacity: 0; transform: translateY(100%); }
    3%, 22% { opacity: 1; transform: translateY(0); }
    25% { opacity: 0; transform: translateY(-100%); }
  }
</style>
      <p class="mt-6 text-lg leading-8 text-gray-600">
        A modern framework that combines the power of Clojure with Electron and your favorite frontend library, enabling you to build robust cross-platform desktop applications with a seamless developer experience.
      </p>
      <div class="mt-10 flex items-center justify-center gap-x-6">
        <a href={getAssetPath("/guides/getting-started")} class="rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-all duration-200 hover:scale-105">
          Get started
        </a>
        <a href="https://github.com/svazqz/zenthyr" class="text-sm font-semibold leading-6 text-gray-900 hover:text-indigo-600 transition-colors duration-200">
          View on GitHub <span aria-hidden="true">â†’</span>
        </a>
      </div>
    </div>
  </div>
</section>